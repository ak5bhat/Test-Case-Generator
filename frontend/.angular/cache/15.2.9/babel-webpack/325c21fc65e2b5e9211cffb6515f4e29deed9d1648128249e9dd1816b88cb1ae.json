{"ast":null,"code":"import { saveAs } from 'file-saver';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./api.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"./header/header.component\";\nconst _c0 = [\"f\"];\nfunction AppComponent_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵelement(1, \"div\", 27);\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AppComponent {\n  constructor(service) {\n    this.service = service;\n    this.emailOpened = false;\n    this.displayedData = '';\n    this.title = \"\";\n    this.msg = '';\n    this.part1 = '';\n    this.part2 = '';\n    this.part3 = '';\n    this.content = '';\n    this.showBufferAnimation = false;\n  }\n  // subForm !: FormGroup;\n  ngOnInit() {\n    // this.retrieve();\n  }\n  startBufferAnimation() {\n    this.showBufferAnimation = true;\n    setTimeout(() => {\n      this.showBufferAnimation = false;\n    }, 15000);\n  }\n  onClick() {\n    // console.log(this.submitForm);\n    // console.log(this.submitForm['value']);\n    console.log('started===');\n    this.service.send(this.submitForm['value']).subscribe(data => {\n      console.log(\"respose received\");\n      this.displayedData = data['text'];\n      // this.router.navigate(['/'])\n      const parts = this.displayedData.split(\"$$$\", 2);\n      this.part1 = parts[1];\n      this.part2 = parts[0].trimEnd();\n      const bulk = this.part1.split(\"***\");\n      this.part1 = bulk[0];\n      this.part3 = bulk[1];\n      // this.part3 = parts[2];\n      this.content = `Test Steps: \\n${this.part1}\\n**********************************************************************\\n**********************************************************************\\n\\nTest Data in ${this.submitForm['value']['lang']} language:\\n${this.part2}\\n**********************************************************************\\n**********************************************************************\\n\\nTest Results:\\n${this.part3}\\n`;\n      // console.log(this.part1);\n      // console.log(this.part2);\n    }, error => {\n      console.log(error);\n    });\n  }\n  //--------------no use --------------\n  // retrieve(): void {\n  //   this.service.receive()\n  //     .subscribe({\n  //       next: (data) => {\n  //         this.ans = data;\n  //         console.log(data);\n  //       },\n  //       error: (e) => console.error(e)\n  //     });\n  // }\n  // retrieve(): void {\n  //   this.service.receive()\n  //     .subscribe(\n  //       (data) => {\n  //         console.log('Response Data:', data);\n  //         this.displayData(data);\n  //       },\n  //       (error) => {\n  //         console.error('Error:',error);\n  //     });\n  // }\n  // displayData(data: any) {\n  //   // Assign the received data to a variable in your component to use it in the template\n  //   this.displayedData = data;\n  // }\n  downloadTextFile() {\n    //if empty cant download\n    // this.content = `Test Steps: \\n${this.part1}\\n**********************************************************************\\n**********************************************************************\\n\\nTest Data in ${this.submitForm['value']['lang']}  language:\\n${this.part2}\\n**********************************************************************\\n**********************************************************************\\n\\nTest Results:\\n${this.part3}\\n`;\n    const fileName = `${this.submitForm['value']['query']} test case in ${this.submitForm['value']['lang']}.txt`;\n    const blob = new Blob([this.content], {\n      type: 'text/plain;charset=utf-8'\n    });\n    saveAs(blob, fileName);\n  }\n  openEmail() {\n    if (this.emailOpened) {\n      return;\n    }\n    // const subject = `Test Steps: \\n${this.part1}\\n**********************************************************************\\n**********************************************************************\\n\\nTest Data in ${this.submitForm['value']['lang']}  language:\\n${this.part2}\\n**********************************************************************\\n**********************************************************************\\n\\nTest Results:\\n${this.part3}\\n`;\n    const subject = `${this.displayedData.split(\"$$$\")}`;\n    // const mailtoUrl = `mailto:?subject=${encodeURIComponent(subject)}`;\n    // window.location.href = mailtoUrl;\n    // const mailtoUrl = `mailto:?subject=${encodeURIComponent(subject)}`;\n    // window.open(mailtoUrl, '_blank');\n    // const mailtoUrl = `mailto:?subject=${encodeURIComponent(subject)}`;\n    // setTimeout(() => {\n    //   window.open(mailtoUrl, '_blank');\n    // }, 100);\n    const mailtoUrl = `mailto:?subject=${encodeURIComponent(subject)}`;\n    setTimeout(() => {\n      const emailWindow = window.open(mailtoUrl, '_blank');\n      if (emailWindow) {\n        this.emailOpened = true;\n        emailWindow.onbeforeunload = () => {\n          this.emailOpened = false;\n        };\n      }\n    }, 100);\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.ApiService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  viewQuery: function AppComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.submitForm = _t.first);\n    }\n  },\n  decls: 63,\n  vars: 4,\n  consts: [[1, \"container-fluid\"], [1, \"row\"], [3, \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"col-md-10\"], [1, \"col-md-6\"], [1, \"form-group\"], [\"for\", \"tcase\", 1, \"sr-only\"], [\"id\", \"tcase\", \"ngModel\", \"\", \"name\", \"tcase\", \"autofocus\", \"\", \"required\", \"\", 1, \"form-control\"], [\"value\", \"\"], [\"value\", \"unit testing\"], [\"value\", \"functional testing\"], [\"for\", \"lang\", 1, \"sr-only\"], [\"type\", \"text\", \"id\", \"lang\", \"placeholder\", \"Language\", \"ngModel\", \"\", \"name\", \"lang\", \"required\", \"\", 1, \"form-control\"], [1, \"col-md-12\"], [\"for\", \"query\", 1, \"sr-only\"], [\"type\", \"text\", \"id\", \"query\", \"placeholder\", \"Input here\", \"ngModel\", \"\", \"name\", \"query\", \"required\", \"\", 1, \"form-control\"], [1, \"col-md-2\", \"grid-container\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [\"class\", \"buffer-animation\", 4, \"ngIf\"], [\"type\", \"reset\", \"id\", \"resetbutton\", 1, \"btn\", \"btn-danger\", \"gap\"], [\"id\", \"emailbutton\", 1, \"btn\", \"btn-info\", 3, \"click\"], [\"id\", \"downloadbutton\", 1, \"btn\", \"btn-warning\", \"gap\", 3, \"click\"], [1, \"col-sm-4\"], [1, \"scrollable\"], [1, \"custom-pre\"], [1, \"buffer-animation\"], [1, \"buffer-spinner\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-header\");\n      i0.ɵɵelementStart(1, \"div\", 0)(2, \"div\", 0)(3, \"div\", 1)(4, \"form\", 2, 3);\n      i0.ɵɵlistener(\"ngSubmit\", function AppComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.onClick();\n      });\n      i0.ɵɵelementStart(6, \"div\", 4)(7, \"div\", 1)(8, \"div\", 5)(9, \"div\", 6)(10, \"label\", 7);\n      i0.ɵɵtext(11, \"Test case:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"select\", 8)(13, \"option\", 9);\n      i0.ɵɵtext(14, \"-- Select an item --\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"option\", 10);\n      i0.ɵɵtext(16, \" Unit test case \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"option\", 11);\n      i0.ɵɵtext(18, \" Functional test case \");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(19, \"div\", 5)(20, \"div\", 6)(21, \"label\", 12);\n      i0.ɵɵtext(22, \"Language\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"input\", 13);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(24, \"div\", 1)(25, \"div\", 14)(26, \"div\", 6)(27, \"label\", 15);\n      i0.ɵɵtext(28, \"Input\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(29, \"input\", 16);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(30, \"div\", 17)(31, \"button\", 18);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_31_listener() {\n        return ctx.startBufferAnimation();\n      });\n      i0.ɵɵtext(32, \"Submit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(33, AppComponent_div_33_Template, 2, 0, \"div\", 19);\n      i0.ɵɵelement(34, \"input\", 20)(35, \"br\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(36, \"div\", 17)(37, \"button\", 21);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_37_listener() {\n        return ctx.openEmail();\n      });\n      i0.ɵɵtext(38, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"button\", 22);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_39_listener() {\n        return ctx.downloadTextFile();\n      });\n      i0.ɵɵtext(40, \"Download\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(41, \"hr\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(42, \"div\", 0)(43, \"div\", 0)(44, \"div\", 1)(45, \"div\", 23)(46, \"div\", 24)(47, \"h4\");\n      i0.ɵɵtext(48, \"Test Steps\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(49, \"pre\", 25);\n      i0.ɵɵtext(50);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(51, \"div\", 23)(52, \"div\", 24)(53, \"h4\");\n      i0.ɵɵtext(54, \"Test Data\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(55, \"pre\", 25);\n      i0.ɵɵtext(56);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(57, \"div\", 23)(58, \"div\", 24)(59, \"h4\");\n      i0.ɵɵtext(60, \"Test Results\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(61, \"pre\", 25);\n      i0.ɵɵtext(62);\n      i0.ɵɵelementEnd()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(33);\n      i0.ɵɵproperty(\"ngIf\", ctx.showBufferAnimation);\n      i0.ɵɵadvance(17);\n      i0.ɵɵtextInterpolate1(\"              \", ctx.part1, \"\\n            \");\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate1(\"              \", ctx.part2, \"\\n            \");\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate1(\"              \", ctx.part3, \"\\n            \");\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm, i4.HeaderComponent],\n  styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 715:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\nSyntaxError\\\\n\\\\n(74:3) D:\\\\\\\\myprojects\\\\\\\\mine\\\\\\\\generator\\\\\\\\frontend\\\\\\\\src\\\\\\\\app\\\\\\\\app.component.css Unknown word\\\\n\\\\n \\\\u001b[90m 72 | \\\\u001b[39m\\\\u001b[33m.gap\\\\u001b[39m\\\\u001b[33m{\\\\u001b[39m\\\\n \\\\u001b[90m 73 | \\\\u001b[39m  margin-left\\\\u001b[33m:\\\\u001b[39m 10px\\\\u001b[33m;\\\\u001b[39m\\\\n\\\\u001b[1m\\\\u001b[31m>\\\\u001b[39m\\\\u001b[22m\\\\u001b[90m 74 | \\\\u001b[39m\\\\u001b[33m}\\\\u001b[39m */\\\\n \\\\u001b[90m    | \\\\u001b[39m  \\\\u001b[1m\\\\u001b[31m^\\\\u001b[39m\\\\u001b[22m\\\\n\\\");\\n\\n })\\n\\n \\t});\\n\\n \\t\\n \\t// startup\\n \\t// Load entry module and return exports\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n \\tvar __webpack_exports__ = {};\\n \\t__webpack_modules__[715]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\\n/*# sourceMappingURL=app.component.css.map*/\"]\n});","map":{"version":3,"mappings":"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","names":["saveAs","i0","AppComponent","constructor","service","ngOnInit","startBufferAnimation","showBufferAnimation","setTimeout","onClick","console","log","send","submitForm","subscribe","data","displayedData","parts","split","part1","part2","trimEnd","bulk","part3","content","error","downloadTextFile","fileName","blob","Blob","type","openEmail","emailOpened","subject","mailtoUrl","encodeURIComponent","emailWindow","window","open","onbeforeunload","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["D:\\myprojects\\mine\\generator\\frontend\\src\\app\\app.component.ts","D:\\myprojects\\mine\\generator\\frontend\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ApiService } from './api.service';\nimport {saveAs} from 'file-saver';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit{\n  emailOpened = false;\n  @ViewChild('f') submitForm!: NgForm;\n  displayedData=''\n  title=\"\";\n\n  constructor(private service : ApiService){}\n  msg = '';\n  // subForm !: FormGroup;\n  \n  ngOnInit(): void {\n    // this.retrieve();\n  }\n  part1= ''\n  part2= ''\n  part3= ''\n  content = ''\n\n  showBufferAnimation: boolean = false;\n\n  startBufferAnimation() {\n    this.showBufferAnimation = true;\n    setTimeout(() => {\n      this.showBufferAnimation = false;\n    }, 15000);\n  }\n\n  onClick(){\n    // console.log(this.submitForm);\n    // console.log(this.submitForm['value']);\n    console.log('started===')\n    this.service.send(this.submitForm['value']).subscribe(\n      data =>{\n        console.log(\"respose received\");\n        this.displayedData = data['text'];\n        // this.router.navigate(['/'])\n        const parts = this.displayedData.split(\"$$$\",2);\n\n        this.part1 = parts[1];\n        this.part2 = parts[0].trimEnd();\n\n        const bulk = this.part1.split(\"***\");\n        this.part1 = bulk[0];\n        this.part3 = bulk[1];\n        // this.part3 = parts[2];\n        this.content = `Test Steps: \\n${this.part1}\\n**********************************************************************\\n**********************************************************************\\n\\nTest Data in ${this.submitForm['value']['lang']} language:\\n${this.part2}\\n**********************************************************************\\n**********************************************************************\\n\\nTest Results:\\n${this.part3}\\n`;\n        \n        // console.log(this.part1);\n        // console.log(this.part2);\n      },\n      error => {\n        console.log(error);\n      }\n    )\n  } \n//--------------no use --------------\n  // retrieve(): void {\n  //   this.service.receive()\n  //     .subscribe({\n  //       next: (data) => {\n  //         this.ans = data;\n  //         console.log(data);\n  //       },\n  //       error: (e) => console.error(e)\n  //     });\n  // }\n\n  // retrieve(): void {\n  //   this.service.receive()\n  //     .subscribe(\n  //       (data) => {\n  //         console.log('Response Data:', data);\n  //         this.displayData(data);\n  //       },\n  //       (error) => {\n  //         console.error('Error:',error);\n  //     });\n  // }\n\n  // displayData(data: any) {\n  //   // Assign the received data to a variable in your component to use it in the template\n  //   this.displayedData = data;\n  // }\n\n  downloadTextFile() {\n    //if empty cant download\n    // this.content = `Test Steps: \\n${this.part1}\\n**********************************************************************\\n**********************************************************************\\n\\nTest Data in ${this.submitForm['value']['lang']}  language:\\n${this.part2}\\n**********************************************************************\\n**********************************************************************\\n\\nTest Results:\\n${this.part3}\\n`;\n    const fileName = `${this.submitForm['value']['query']} test case in ${this.submitForm['value']['lang']}.txt`;\n\n    const blob = new Blob([this.content], { type: 'text/plain;charset=utf-8' });\n    saveAs(blob, fileName);\n  }\n\n  openEmail() {\n    if (this.emailOpened) {\n      return;\n    }\n    // const subject = `Test Steps: \\n${this.part1}\\n**********************************************************************\\n**********************************************************************\\n\\nTest Data in ${this.submitForm['value']['lang']}  language:\\n${this.part2}\\n**********************************************************************\\n**********************************************************************\\n\\nTest Results:\\n${this.part3}\\n`;\n    const subject = `${this.displayedData.split(\"$$$\")}`\n    // const mailtoUrl = `mailto:?subject=${encodeURIComponent(subject)}`;\n    // window.location.href = mailtoUrl;\n    // const mailtoUrl = `mailto:?subject=${encodeURIComponent(subject)}`;\n    // window.open(mailtoUrl, '_blank');\n    \n    // const mailtoUrl = `mailto:?subject=${encodeURIComponent(subject)}`;\n    // setTimeout(() => {\n    //   window.open(mailtoUrl, '_blank');\n    // }, 100);\n    \n    const mailtoUrl = `mailto:?subject=${encodeURIComponent(subject)}`; \n    setTimeout(() => {\n      const emailWindow = window.open(mailtoUrl, '_blank');\n      if (emailWindow) {\n        this.emailOpened = true;\n        emailWindow.onbeforeunload = () => {\n          this.emailOpened = false;\n        };\n      }\n    }, 100);\n  }\n}\n","<app-header></app-header>\n<div class=\"container-fluid\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <!-- forms -->\n      <form (ngSubmit)=\"onClick()\" #f=\"ngForm\">\n      <div class=\"col-md-10\">\n        <div class=\"row\">\n\n          <div class=\"col-md-6\">\n            <div class=\"form-group \">\n              <label class=\"sr-only\" for=\"tcase\">Test case:</label>\n              <select class=\"form-control\" id=\"tcase\" ngModel name=\"tcase\" autofocus required>\n                <option value=\"\">-- Select an item --</option>\n                <option value=\"unit testing\"> Unit test case </option>\n                <option value=\"functional testing\"> Functional test case </option>\n              </select>\n            </div>\n          </div>\n\n          <div class=\"col-md-6\">\n            <div class=\"form-group \">\n              <label class=\"sr-only\" for=\"lang\">Language</label>\n              <input type=\"text\" class=\"form-control\" id=\"lang\" placeholder=\"Language\" ngModel name=\"lang\" required>\n            </div>\n          </div>\n\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <div class=\"form-group \">\n              <label class=\"sr-only\" for=\"query\">Input</label>\n              <input type=\"text\" class=\"form-control\" id=\"query\" placeholder=\"Input here\" ngModel name=\"query\" required>\n            </div>\n          </div>\n        </div>\n\n      </div>\n      <div class=\"col-md-2 grid-container\">\n        <button type=\"submit\" (click)=\"startBufferAnimation()\" class=\"btn btn-primary\">Submit</button>\n        <div class=\"buffer-animation\" *ngIf=\"showBufferAnimation\">\n          <div class=\"buffer-spinner\"></div>\n        </div>\n        <input type=\"reset\" id=\"resetbutton\" class=\"btn btn-danger gap\"><br>\n      </div>\n      </form>\n      <div class=\"col-md-2 grid-container\">\n        <button class=\"btn btn-info\" id=\"emailbutton\" (click)=\"openEmail()\">Email</button>\n        <button class=\"btn btn-warning gap\" id = \"downloadbutton\" (click)=\"downloadTextFile()\">Download</button>\n      </div>\n    </div>\n    <hr>\n  </div>\n</div>\n\n<div class=\"container-fluid\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-sm-4\">\n        <div class=\"scrollable\">\n          <h4>Test Steps</h4>\n          <pre class=\"custom-pre\">\n              {{part1}}\n            </pre>\n        </div>\n      </div>\n      <div class=\"col-sm-4\">\n        <div class=\"scrollable\">\n          <h4>Test Data</h4>\n          <pre class=\"custom-pre\">\n              {{part2}}\n            </pre>\n        </div>\n      </div>\n      <div class=\"col-sm-4\">\n        <div class=\"scrollable\">\n          <h4>Test Results</h4>\n          <pre class=\"custom-pre\">\n              {{part3}}\n            </pre>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- <button (click)=\"startBufferAnimation()\" class=\"btn btn-primary\">Click Me</button>\n<div class=\"buffer-animation\" *ngIf=\"showBufferAnimation\">\n  <div class=\"buffer-spinner\"></div>\n</div> -->\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}